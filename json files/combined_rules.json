{
  "botDetection": {
    "logAnalysis": {
      "name": "logAnalysis",
      "parameters": [
        {
          "name": "logData",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "logData.state !== State.Success",
          "result": "false"
        },
        {
          "condition": "logData.value.includes('bot')",
          "result": "BotKind.GenericBot"
        },
        {
          "condition": "logData.value.includes('crawler')",
          "result": "BotKind.GenericCrawler"
        },
        {
          "condition": "logData.value.includes('spider')",
          "result": "BotKind.GenericSpider"
        },
        {
          "condition": "logData.value.includes('HeadlessChrome')",
          "result": "BotKind.HeadlessChrome"
        },
        {
          "condition": "logData.value.includes('Electron')",
          "result": "BotKind.Electron"
        },
        {
          "condition": "logData.value.includes('SlimerJS')",
          "result": "BotKind.SlimerJS"
        },
        {
          "condition": "logData.value.includes('PhantomJS')",
          "result": "BotKind.PhantomJS"
        }
      ]
    },
    "appVersion": {
      "name": "appVersion",
      "parameters": [
        {
          "name": "appVersion",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "appVersion.state !== State.Success",
          "result": "false"
        },
        {
          "condition": "/headless/i.test(appVersion.value)",
          "result": "HeadlessChrome"
        },
        {
          "condition": "/electron/i.test(appVersion.value)",
          "result": "Electron"
        },
        {
          "condition": "/slimerjs/i.test(appVersion.value)",
          "result": "SlimerJS"
        }
      ]
    },
    "clickDetection": {
      "name": "clickDetection",
      "rules": [
        {
          "type": "userAgent",
          "pattern": "bot|crawler|spider|crawling"
        },
        {
          "type": "navigatorProperty",
          "property": "webdriver",
          "value": true
        },
        {
          "type": "clickPattern",
          "maxClicksPerSecond": 5
        }
      ]
    },
    "distinctiveProperties": {
      "name": "distinctiveProperties",
      "parameters": [
        {
          "name": "distinctiveProps",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "distinctiveProps.state !== State.Success",
          "result": "false"
        },
        {
          "condition": "for (bot in distinctiveProps.value) if (distinctiveProps.value[bot]) return bot",
          "result": "dynamic"
        }
      ]
    },
    "documentElementKeys": {
      "name": "documentElementKeys",
      "parameters": [
        {
          "name": "documentElementKeys",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "documentElementKeys.state !== State.Success",
          "result": "false"
        },
        {
          "condition": "includes(documentElementKeys.value, 'selenium', 'webdriver', 'driver')",
          "result": "BotKind.Selenium"
        },
        {
          "condition": "window.navigator.webdriver === true",
          "result": "BotKind.Selenium"
        },
        {
          "condition": "typeof window.webdriver !== 'undefined'",
          "result": "BotKind.Selenium"
        }
      ]
    },
    "errorTrace": {
      "name": "errorTrace",
      "parameters": [
        {
          "name": "errorTrace",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "errorTrace.state !== State.Success",
          "result": "false"
        },
        {
          "condition": "/PhantomJS/i.test(errorTrace.value)",
          "result": "BotKind.PhantomJS"
        }
      ]
    },
    "evalLength": {
      "name": "evalLength",
      "parameters": [
        {
          "name": "evalLength",
          "type": "ComponentDict"
        },
        {
          "name": "browserKind",
          "type": "ComponentDict"
        },
        {
          "name": "browserEngineKind",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "evalLength.state !== State.Success || browserKind.state !== State.Success || browserEngineKind.state !== State.Success",
          "result": "null"
        },
        {
          "condition": "browserEngineKind.value === BrowserEngineKind.Unknown",
          "result": "false"
        },
        {
          "condition": "(length === 37 && !arrayIncludes([BrowserEngineKind.Webkit, BrowserEngineKind.Gecko], browserEngineKind.value)) || (length === 39 && !arrayIncludes([BrowserKind.IE], browserKind.value))",
          "result": "boolean"
        }
      ]
    },
    "functionBind": {
      "name": "functionBind",
      "parameters": [
        {
          "name": "functionBind",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "functionBind.state === State.NotFunction",
          "result": "BotKind.PhantomJS"
        }
      ]
    },
    "languageInconsistency": {
      "name": "languageInconsistency",
      "parameters": [
        {
          "name": "languages",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "languages.state === State.Success && languages.value.length === 0",
          "result": "BotKind.HeadlessChrome"
        }
      ]
    },
    "mimeTypesConsistence": {
      "name": "mimeTypesConsistence",
      "parameters": [
        {
          "name": "mimeTypesConsistent",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "mimeTypesConsistent.state === State.Success && !mimeTypesConsistent.value",
          "result": "BotKind.Unknown"
        }
      ]
    },
    "notificationPermission": {
      "name": "notificationPermission",
      "parameters": [
        {
          "name": "notificationPermissions",
          "type": "ComponentDict"
        },
        {
          "name": "browserKind",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "browserKind.state !== State.Success || browserKind.value !== BrowserKind.Chrome",
          "result": "false"
        },
        {
          "condition": "notificationPermissions.state === State.Success && notificationPermissions.value",
          "result": "BotKind.HeadlessChrome"
        }
      ]
    },
    "pluginsArray": {
      "name": "pluginsArray",
      "parameters": [
        {
          "name": "pluginsArray",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "pluginsArray.state === State.Success && !pluginsArray.value",
          "result": "BotKind.HeadlessChrome"
        }
      ]
    },
    "pluginsInconsistency": {
      "name": "pluginsInconsistency",
      "parameters": [
        {
          "name": "pluginsLength",
          "type": "ComponentDict"
        },
        {
          "name": "android",
          "type": "ComponentDict"
        },
        {
          "name": "browserKind",
          "type": "ComponentDict"
        },
        {
          "name": "browserEngineKind",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "pluginsLength.state === State.Success && android.state === State.Success && browserKind.state === State.Success && browserEngineKind.state === State.Success && browserKind.value === BrowserKind.Chrome",
          "result": "BotKind.HeadlessChrome"
        }
      ]
    },
    "process": {
      "name": "process",
      "parameters": [
        {
          "name": "process",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "process.state === State.Success && process.value.type === 'renderer'",
          "result": "BotKind.Electron"
        },
        {
          "condition": "process.state === State.Success && process.value.versions?.electron != null",
          "result": "BotKind.Electron"
        }
      ]
    },
    "productSub": {
      "name": "productSub",
      "parameters": [
        {
          "name": "productSub",
          "type": "ComponentDict"
        },
        {
          "name": "browserKind",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "productSub.state === State.Success && browserKind.state === State.Success && (browserKind.value === BrowserKind.Chrome || browserKind.value === BrowserKind.Safari)",
          "result": "BotKind.Unknown"
        }
      ]
    },
    "rtt": {
      "name": "rtt",
      "parameters": [
        {
          "name": "rtt",
          "type": "ComponentDict"
        },
        {
          "name": "android",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "rtt.state === State.Success && android.state === State.Success && android.value && rtt.value === 0",
          "result": "BotKind.HeadlessChrome"
        }
      ]
    },
    "userAgent": {
      "name": "userAgent",
      "parameters": [
        {
          "name": "userAgent",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "userAgent.state === State.Success && /PhantomJS/i.test(userAgent.value)",
          "result": "BotKind.PhantomJS"
        },
        {
          "condition": "userAgent.state === State.Success && /Headless/i.test(userAgent.value)",
          "result": "BotKind.HeadlessChrome"
        },
        {
          "condition": "userAgent.state === State.Success && /Electron/i.test(userAgent.value)",
          "result": "BotKind.Electron"
        },
        {
          "condition": "userAgent.state === State.Success && /slimerjs/i.test(userAgent.value)",
          "result": "BotKind.SlimerJS"
        }
      ]
    },
    "webDriver": {
      "name": "webDriver",
      "parameters": [
        {
          "name": "webDriver",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "webDriver.state === State.Success && webDriver.value",
          "result": "BotKind.HeadlessChrome"
        }
      ]
    },
    "webGL": {
      "name": "webGL",
      "parameters": [
        {
          "name": "webGL",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "webGL.state === State.Success && webGL.value.vendor === 'Brian Paul' && webGL.value.renderer === 'Mesa OffScreen'",
          "result": "BotKind.HeadlessChrome"
        }
      ]
    },
    "windowExternal": {
      "name": "windowExternal",
      "parameters": [
        {
          "name": "windowExternal",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "windowExternal.state === State.Success && /Sequentum/i.test(windowExternal.value)",
          "result": "BotKind.Sequentum"
        }
      ]
    },
    "windowSize": {
      "name": "windowSize",
      "parameters": [
        {
          "name": "windowSize",
          "type": "ComponentDict"
        },
        {
          "name": "documentFocus",
          "type": "ComponentDict"
        }
      ],
      "conditions": [
        {
          "condition": "windowSize.state === State.Success && documentFocus.state === State.Success && windowSize.value.outerWidth === 0 && windowSize.value.outerHeight === 0",
          "result": "BotKind.HeadlessChrome"
        }
      ]
    }
  }
}
